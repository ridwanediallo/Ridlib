(function(t,r){typeof exports=="object"&&typeof module<"u"?module.exports=r(require("@hotwired/stimulus")):typeof define=="function"&&define.amd?define(["@hotwired/stimulus"],r):(t=typeof globalThis<"u"?globalThis:t||self,t.StimulusContentLoader=r(t.Stimulus))})(this,function(t){"use strict";class r extends t.Controller{connect(){if(!this.hasUrlValue){console.error("[stimulus-content-loader] You need to pass an url to fetch the remote content.");return}this.hasLazyLoadingValue?this.lazyLoad():this.load()}disconnect(){this.stopRefreshing()}load(){this.fetch(),this.hasRefreshIntervalValue&&this.startRefreshing()}lazyLoad(){const e={threshold:this.lazyLoadingThresholdValue,rootMargin:this.lazyLoadingRootMarginValue};new IntersectionObserver((n,o)=>{n.forEach(i=>{i.isIntersecting&&(this.load(),o.unobserve(i.target))})},e).observe(this.element)}fetch(){fetch(this.urlValue).then(e=>{if(!e.ok)throw new Error(e.statusText);return e.text()}).then(e=>{this.element.innerHTML=e,this.loadScriptsValue&&this.loadScripts(),this.dispatch("success")}).catch(e=>{this.dispatch("error",{detail:{error:e}})})}startRefreshing(){this.refreshTimer=setInterval(()=>{this.fetch()},this.refreshIntervalValue)}stopRefreshing(){this.refreshTimer&&clearInterval(this.refreshTimer)}loadScripts(){this.element.querySelectorAll("script").forEach(e=>{const s=document.createElement("script");s.innerHTML=e.innerHTML,document.head.appendChild(s).parentNode.removeChild(s)})}}return r.values={url:String,lazyLoading:Boolean,lazyLoadingThreshold:Number,lazyLoadingRootMargin:{type:String,default:"0px"},refreshInterval:Number,loadScripts:Boolean},r});
